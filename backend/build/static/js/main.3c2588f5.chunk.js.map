{"version":3,"sources":["react-auth0-spa.js","components/LandingPage.js","components/TopBar.js","components/UserProfile.js","components/Menu.js","components/SignUpForm.js","components/Members.js","components/Chat.js","components/ChatWindow.js","App.js","serviceWorker.js","utils/history.js","index.js","user.svg"],"names":["DEFAULT_REDIRECT_CALLBACK","window","history","replaceState","document","title","location","pathname","Auth0Context","React","createContext","useAuth0","useContext","Auth0Provider","children","onRedirectCallback","initOptions","useState","isAuthenticated","setIsAuthenticated","user","setUser","auth0Client","setAuth0","loading","setLoading","popupOpen","setPopupOpen","useEffect","a","createAuth0Client","auth0FromHook","search","includes","handleRedirectCallback","appState","getUser","initAuth0","loginWithPopup","params","console","error","Provider","value","getIdTokenClaims","loginWithRedirect","getTokenSilently","getTokenWithPopup","logout","LandingPage","Container","fluid","className","Jumbotron","Button","onClick","TopBar","UserProfile","props","src","userImage","alt","userName","name","Menu","show","setShow","open","Modal","onHide","Header","closeButton","Title","Body","useStyles","makeStyles","theme","root","width","button","marginTop","spacing","marginRight","actionsContainer","marginBottom","resetContainer","padding","SignUpForm","classes","activeStep","setActiveStep","steps","nickname","setName","userType","setUserType","condition","setCondition","handleChange","event","target","handleConditionChange","handleNext","prevActiveStep","handleBack","log","Stepper","orientation","map","label","index","Step","key","StepLabel","StepContent","step","Typography","TextField","required","onChange","e","FormControl","component","RadioGroup","row","FormControlLabel","control","Radio","getStepContent","disabled","variant","color","length","Paper","square","elevation","then","token","requestOptions","method","headers","Authorization","body","JSON","stringify","fetch","reload","Members","authData","groupInfo","members","member","active","data","type","socket","require","io","Chat","ref","useRef","text","setText","messages","setMessages","_id","res","json","on","payload","autohide","start","message","groupid","ChatWindow","setAuthData","Row","Col","style","paddingLeft","paddingRight","xs","App","auth","setAuth","Boolean","hostname","match","createBrowserHistory","ReactDOM","render","domain","config","client_id","clientId","audience","redirect_uri","href","push","targetUrl","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","module","exports"],"mappings":"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","file":"static/js/main.3c2588f5.chunk.js","sourcesContent":["// src/react-auth0-spa.js\r\nimport React, { useState, useEffect, useContext } from \"react\";\r\nimport createAuth0Client from \"@auth0/auth0-spa-js\";\r\n\r\nconst DEFAULT_REDIRECT_CALLBACK = () =>\r\n  window.history.replaceState({}, document.title, window.location.pathname);\r\n\r\nexport const Auth0Context = React.createContext();\r\nexport const useAuth0 = () => useContext(Auth0Context);\r\nexport const Auth0Provider = ({\r\n  children,\r\n  onRedirectCallback = DEFAULT_REDIRECT_CALLBACK,\r\n  ...initOptions\r\n}) => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState();\r\n  const [user, setUser] = useState();\r\n  const [auth0Client, setAuth0] = useState();\r\n  const [loading, setLoading] = useState(true);\r\n  const [popupOpen, setPopupOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const initAuth0 = async () => {\r\n      const auth0FromHook = await createAuth0Client(initOptions);\r\n      setAuth0(auth0FromHook);\r\n\r\n      if (\r\n        window.location.search.includes(\"code=\") &&\r\n        window.location.search.includes(\"state=\")\r\n      ) {\r\n        const { appState } = await auth0FromHook.handleRedirectCallback();\r\n        onRedirectCallback(appState);\r\n      }\r\n\r\n      const isAuthenticated = await auth0FromHook.isAuthenticated();\r\n\r\n      setIsAuthenticated(isAuthenticated);\r\n\r\n      if (isAuthenticated) {\r\n        const user = await auth0FromHook.getUser();\r\n        setUser(user);\r\n      }\r\n\r\n      setLoading(false);\r\n    };\r\n    initAuth0();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const loginWithPopup = async (params = {}) => {\r\n    setPopupOpen(true);\r\n    try {\r\n      await auth0Client.loginWithPopup(params);\r\n    } catch (error) {\r\n      console.error(error);\r\n    } finally {\r\n      setPopupOpen(false);\r\n    }\r\n    const user = await auth0Client.getUser();\r\n    setUser(user);\r\n    setIsAuthenticated(true);\r\n  };\r\n\r\n  const handleRedirectCallback = async () => {\r\n    setLoading(true);\r\n    await auth0Client.handleRedirectCallback();\r\n    const user = await auth0Client.getUser();\r\n    setLoading(false);\r\n    setIsAuthenticated(true);\r\n    setUser(user);\r\n  };\r\n  return (\r\n    <Auth0Context.Provider\r\n      value={{\r\n        isAuthenticated,\r\n        user,\r\n        loading,\r\n        popupOpen,\r\n        loginWithPopup,\r\n        handleRedirectCallback,\r\n        getIdTokenClaims: (...p) => auth0Client.getIdTokenClaims(...p),\r\n        loginWithRedirect: (...p) => auth0Client.loginWithRedirect(...p),\r\n        getTokenSilently: (...p) => auth0Client.getTokenSilently(...p),\r\n        getTokenWithPopup: (...p) => auth0Client.getTokenWithPopup(...p),\r\n        logout: (...p) => auth0Client.logout(...p),\r\n      }}\r\n    >\r\n      {children}\r\n    </Auth0Context.Provider>\r\n  );\r\n};\r\n","// src/components/NavBar.js\r\n\r\nimport React from \"react\";\r\nimport { useAuth0 } from \"../react-auth0-spa\";\r\n\r\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nconst LandingPage = () => {\r\n  const { loginWithRedirect } = useAuth0();\r\n\r\n  return (\r\n    <Container fluid=\"md\" className=\"p-3\">\r\n      <Jumbotron>\r\n        <h1 className=\"header\">Quell</h1>\r\n        <Button onClick={() => loginWithRedirect({})}>Login/Signup</Button>\r\n      </Jumbotron>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default LandingPage;\r\n","// src/components/NavBar.js\r\n\r\nimport React from \"react\";\r\n\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nconst TopBar = () => {\r\n  return (\r\n    <Container fluid className=\"topbar\">\r\n      <div className=\"logo\">Quell</div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default TopBar;\r\n","// src/components/NavBar.js\r\n\r\nimport React from \"react\";\r\nimport userImage from \"../user.svg\";\r\nimport { useAuth0 } from \"../react-auth0-spa\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nconst UserProfile = (props) => {\r\n  const { logout, user } = useAuth0();\r\n\r\n  return (\r\n    <div className=\"profile\">\r\n      <img src={userImage} className=\"profile-pic\" alt=\"Profile\" />\r\n      <div className=\"profile-name\">{props.userName}</div>\r\n      <div className=\"profile-email\">{user.name}</div>\r\n      <Button onClick={logout}>Log Out</Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserProfile;\r\n","// src/components/NavBar.js\r\n\r\nimport React, { useState } from \"react\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\n\r\nimport UserProfile from \"./UserProfile\";\r\n\r\nconst Menu = (props) => {\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"menu-container\">\r\n        <div className=\"button-group\">\r\n          <Button\r\n            onClick={() =>\r\n              window.open(\r\n                \"https://github.com/sneakysensei/Quell-HackJaipur\",\r\n                \"_blank\"\r\n              )\r\n            }\r\n          >\r\n            Github Repo\r\n          </Button>\r\n          <Button onClick={handleShow}>Get Help</Button>\r\n        </div>\r\n        <UserProfile userName={props.userName} />\r\n      </div>\r\n\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Get Help</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>Important contacts can be shown here.</Modal.Body>\r\n        <Modal.Body>Contacts related to mental illness helplines</Modal.Body>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Stepper from \"@material-ui/core/Stepper\";\r\nimport Step from \"@material-ui/core/Step\";\r\nimport StepLabel from \"@material-ui/core/StepLabel\";\r\nimport StepContent from \"@material-ui/core/StepContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\n\r\nimport { useAuth0 } from \"../react-auth0-spa\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  button: {\r\n    marginTop: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  actionsContainer: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  resetContainer: {\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nfunction getSteps() {\r\n  return [\"Enter your name\", \"Select account type\", \"More Details\"];\r\n}\r\n\r\nexport default function SignUpForm(props) {\r\n  const { user, getTokenSilently } = useAuth0();\r\n  const classes = useStyles();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const steps = getSteps();\r\n\r\n  const [name, setName] = useState(user.nickname);\r\n  const [userType, setUserType] = React.useState(\"user\");\r\n  const [condition, setCondition] = React.useState(\"Depression\");\r\n\r\n  const handleChange = (event) => {\r\n    setUserType(event.target.value);\r\n  };\r\n\r\n  const handleConditionChange = (event) => {\r\n    setCondition(event.target.value);\r\n  };\r\n\r\n  const handleNext = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setActiveStep(0);\r\n  };\r\n\r\n  function getStepContent(step) {\r\n    switch (step) {\r\n      case 0:\r\n        return (\r\n          <>\r\n            <Typography>\r\n              This name would be shown to other users in the group. You can also\r\n              signup under an alias.\r\n            </Typography>\r\n            <TextField\r\n              required\r\n              label=\"Name\"\r\n              value={name}\r\n              onChange={(e) => {\r\n                setName(e.target.value);\r\n              }}\r\n            />\r\n          </>\r\n        );\r\n      case 1:\r\n        return (\r\n          <>\r\n            <Typography>Are you a user or a therapist?</Typography>\r\n            <FormControl component=\"fieldset\">\r\n              <RadioGroup\r\n                row\r\n                name=\"type\"\r\n                value={userType}\r\n                onChange={handleChange}\r\n              >\r\n                <FormControlLabel\r\n                  value=\"user\"\r\n                  control={<Radio />}\r\n                  label=\"User\"\r\n                />\r\n                <FormControlLabel\r\n                  value=\"therapist\"\r\n                  control={<Radio />}\r\n                  label=\"Therapist\"\r\n                />\r\n              </RadioGroup>\r\n            </FormControl>\r\n          </>\r\n        );\r\n      case 2:\r\n        return (\r\n          <>\r\n            <Typography>\r\n              {userType === \"therapist\" && \"All Clear!\"}\r\n              {userType === \"user\" &&\r\n                \"Select the condition that you can most closely realte to.\"}\r\n            </Typography>\r\n            {userType === \"user\" && (\r\n              <FormControl component=\"fieldset\">\r\n                <RadioGroup\r\n                  row\r\n                  name=\"type\"\r\n                  value={condition}\r\n                  onChange={handleConditionChange}\r\n                >\r\n                  <FormControlLabel\r\n                    value=\"Depression\"\r\n                    control={<Radio />}\r\n                    label=\"Depression\"\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"Anxiety disorder\"\r\n                    control={<Radio />}\r\n                    label=\"Anxiety disorder\"\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"Obesessive-Compulsive disorder\"\r\n                    control={<Radio />}\r\n                    label=\"Obesessive-Compulsive disorder\"\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"Post-traumatic stress disorder\"\r\n                    control={<Radio />}\r\n                    label=\"Post-traumatic stress disorder\"\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"Bipolar disorder\"\r\n                    control={<Radio />}\r\n                    label=\"Bipolar disorder\"\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n            )}\r\n          </>\r\n        );\r\n      default:\r\n        return <></>;\r\n    }\r\n  }\r\n\r\n  console.log(name);\r\n  console.log(userType);\r\n  console.log(condition);\r\n  const handleSubmit = () => {\r\n    getTokenSilently().then((token) => {\r\n      const requestOptions = {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: \"Bearer \" + token,\r\n        },\r\n        body: JSON.stringify({\r\n          name: name,\r\n          userType: userType,\r\n          condition: userType === \"user\" ? condition : \"\",\r\n        }),\r\n      };\r\n      fetch(\"/users/signup\", requestOptions).then(() => {\r\n        window.location.reload();\r\n      });\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Stepper activeStep={activeStep} orientation=\"vertical\">\r\n        {steps.map((label, index) => (\r\n          <Step key={label}>\r\n            <StepLabel>{label}</StepLabel>\r\n            <StepContent>\r\n              {getStepContent(index)}\r\n              <div className={classes.actionsContainer}>\r\n                <div>\r\n                  <Button\r\n                    disabled={activeStep === 0}\r\n                    onClick={handleBack}\r\n                    className={classes.button}\r\n                  >\r\n                    Back\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={handleNext}\r\n                    className={classes.button}\r\n                  >\r\n                    {activeStep === steps.length - 1 ? \"Finish\" : \"Next\"}\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </StepContent>\r\n          </Step>\r\n        ))}\r\n      </Stepper>\r\n      {activeStep === steps.length && (\r\n        <Paper square elevation={0} className={classes.resetContainer}>\r\n          <Typography>\r\n            Thank you for your responses - Click to submit\r\n          </Typography>\r\n          <Button onClick={handleReset} className={classes.button}>\r\n            Reset\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={handleSubmit}\r\n            className={classes.button}\r\n          >\r\n            Submit and Signup\r\n          </Button>\r\n        </Paper>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","// src/components/NavBar.js\r\n\r\nimport React from \"react\";\r\n\r\nconst Members = (props) => {\r\n  console.log(props.authData);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"members-container\">\r\n        <div className=\"member-heading\">Members</div>\r\n        {props.authData.groupInfo.members.map((member, index) => {\r\n          var active =\r\n            member.name === props.authData.data.name ? \" active\" : \"\";\r\n          return (\r\n            <div key={index} className={`member${active}`}>\r\n              <div className=\"member-name\">{member.name}</div>\r\n              {props.authData.data.type === \"therapist\" &&\r\n                member.type === \"user\" && (\r\n                  <div className=\"member-condition\">{member.condition}</div>\r\n                )}\r\n              {member.type === \"therapist\" && (\r\n                <div className=\"member-condition\">Therapist</div>\r\n              )}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Members;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useAuth0 } from \"../react-auth0-spa\";\r\n\r\nimport FreeScrollBar from \"react-free-scrollbar\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nconst io = require(\"socket.io-client\");\r\nconst socket = io();\r\n\r\nconst Chat = (props) => {\r\n  const ref = useRef();\r\n  const { getTokenSilently } = useAuth0();\r\n  const [text, setText] = useState(\"\");\r\n  const [messages, setMessages] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getTokenSilently().then((token) => {\r\n      fetch(`/messages/?id=${props.authData.groupInfo._id}`, {\r\n        headers: {\r\n          Authorization: \"Bearer \" + token,\r\n        },\r\n      })\r\n        .then((res) => {\r\n          return res.json();\r\n        })\r\n        .then((res) => {\r\n          console.log(res);\r\n          setMessages(res.messages);\r\n        });\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"message\", (payload) => {\r\n      setMessages((messages) => [...messages, payload]);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"chat\">\r\n        <FreeScrollBar autohide start=\"bottom\" ref={ref}>\r\n          {messages.map((message) => {\r\n            var active =\r\n              message.name === props.authData.data.name ? \" active\" : \"\";\r\n            return (\r\n              <div className={`message${active}`}>\r\n                <div className=\"message-name\">{message.name}</div>\r\n                <div className=\"message-text\">{message.text}</div>\r\n              </div>\r\n            );\r\n          })}\r\n        </FreeScrollBar>\r\n      </div>\r\n      <div className=\"chat-inbox\">\r\n        <TextField\r\n          className=\"input\"\r\n          label=\"Start typing...\"\r\n          variant=\"filled\"\r\n          value={text}\r\n          onChange={(e) => {\r\n            setText(e.target.value);\r\n          }}\r\n        />\r\n        <Button\r\n          onClick={() => {\r\n            if (text !== \"\") {\r\n              getTokenSilently().then((token) => {\r\n                const requestOptions = {\r\n                  method: \"POST\",\r\n                  headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: \"Bearer \" + token,\r\n                  },\r\n                  body: JSON.stringify({\r\n                    groupid: props.authData.groupInfo._id,\r\n                    name: props.authData.data.name,\r\n                    text: text,\r\n                  }),\r\n                };\r\n                fetch(\"/messages\", requestOptions).then(() => {\r\n                  setText(\"\");\r\n                });\r\n              });\r\n            }\r\n          }}\r\n        >\r\n          Send\r\n        </Button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n","// src/components/NavBar.js\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useAuth0 } from \"../react-auth0-spa\";\r\n\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nimport TopBar from \"./TopBar\";\r\nimport Menu from \"./Menu\";\r\nimport SignUpForm from \"./SignUpForm\";\r\nimport Members from \"./Members\";\r\nimport Chat from \"./Chat\";\r\n\r\nconst ChatWindow = () => {\r\n  const { getTokenSilently } = useAuth0();\r\n\r\n  const [authData, setAuthData] = useState({});\r\n\r\n  const authenticate = (event) => {\r\n    getTokenSilently().then((token) => {\r\n      fetch(\"/users/authenticate\", {\r\n        headers: {\r\n          Authorization: \"Bearer \" + token,\r\n        },\r\n      })\r\n        .then((res) => res.json())\r\n        .then((res) => setAuthData(res));\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    authenticate();\r\n  }, []);\r\n\r\n  // if (auth === {}) {\r\n  //   return (\r\n  //     <div className=\"App\">\r\n  //       <header className=\"App-header\">\r\n  //         <h1>Please wait...</h1>\r\n  //       </header>\r\n  //     </div>\r\n  //   );\r\n  // }\r\n  console.log(authData);\r\n  if (authData.type === \"signup\") {\r\n    return <SignUpForm />;\r\n  } else if (authData.type === \"login\") {\r\n    return (\r\n      <>\r\n        <TopBar />\r\n        <Container fluid className=\"chat-container\">\r\n          <Row>\r\n            <Col style={{ paddingLeft: 0, paddingRight: 0 }}>\r\n              <Menu userName={authData.data.name} />\r\n            </Col>\r\n            <Col style={{ paddingLeft: 0, paddingRight: 0 }} xs={6}>\r\n              <div className=\"chat-container\">\r\n                <Chat authData={authData} />\r\n              </div>\r\n            </Col>\r\n            <Col style={{ paddingLeft: 0, paddingRight: 0 }}>\r\n              <Members authData={authData} />\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          {authData && <h2>Logging In...</h2>}\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default ChatWindow;\r\n","import React, { useState } from \"react\";\r\nimport \"./App.css\";\r\nimport { useAuth0 } from \"./react-auth0-spa\";\r\n\r\nimport LandingPage from \"./components/LandingPage\";\r\nimport ChatWindow from \"./components/ChatWindow\";\r\n\r\nfunction App() {\r\n  const [auth, setAuth] = useState(false);\r\n\r\n  const { loading, user, isAuthenticated } = useAuth0();\r\n\r\n  if (user && !auth) {\r\n    setAuth(true);\r\n  }\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          <h1>Please wait...</h1>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!isAuthenticated) {\r\n    return (\r\n      <div className=\"App\">\r\n        <LandingPage />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <ChatWindow />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","// src/utils/history.js\r\n\r\nimport { createBrowserHistory } from \"history\";\r\nexport default createBrowserHistory();\r\n","// src/index.js\r\n\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { Auth0Provider } from \"./react-auth0-spa\";\r\nimport config from \"./auth_config.json\";\r\nimport history from \"./utils/history\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\n// A function that routes the user to the right place\r\n// after login\r\nconst onRedirectCallback = (appState) => {\r\n  history.push(\r\n    appState && appState.targetUrl\r\n      ? appState.targetUrl\r\n      : window.location.pathname\r\n  );\r\n};\r\n\r\nReactDOM.render(\r\n  <Auth0Provider\r\n    domain={config.domain}\r\n    client_id={config.clientId}\r\n    audience={config.audience}\r\n    redirect_uri={window.location.href}\r\n    onRedirectCallback={onRedirectCallback}\r\n  >\r\n    <App />\r\n  </Auth0Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/user.85cddc58.svg\";"],"sourceRoot":""}